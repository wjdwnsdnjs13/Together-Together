<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.together.springStudy.mapper.PostMapper">

    <resultMap id="PostMainMap" type="com.together.springStudy.model.PostMainData">
        <id column="post_id" property="postId"/>
        <result column="post_board_id" property="postBoardId"/>
        <result column="post_user_id" property="postUserId"/>
        <result column="post_title" property="postTitle"/>
        <result column="post_content" property="postContent"/>
        <result column="post_tag" property="postTag"/>
        <result column="post_creation_date" property="postCreationDate"/>
        <result column="user_name" property="userName"/>
        <result column="post_comment_count" property="postCommentCount"/>
        <result column="post_like_count" property="postLikeCount"/>
    </resultMap>

    <select id="getAllPost">
        SELECT
            *
        FROM
            post_data
    </select>

    <select id="getAllPostForMain" resultMap="PostMainMap">
        SELECT
            posts_data.*,
            (SELECT
                user_name
            FROM
                user_data
            WHERE
                user_id = posts_data.post_user_id) as user_name,
            (SELECT
                count(*)
            FROM
                post_comment
            WHERE
                comment_post_id = posts_data.post_id) as post_comment_count,
            (SELECT
                count(*)
            FROM
                post_like
            WHERE
                like_post_id = posts_data.post_id) as post_like_count
        FROM
            posts_data;
    </select>

    <select id="getPostByPrimaryKey" resultType="com.together.springStudy.model.PostMainData">
        SELECT
            posts_data.*,
            (SELECT
                user_name
            FROM
                user_data
            WHERE
                user_id = posts_data.post_user_id) as user_name,
            (SELECT
                count(*)
            FROM
                post_comment
            WHERE
                comment_post_id = posts_data.post_id) as post_comment_count,
            (SELECT
                count(*)
            FROM
                post_like
            WHERE
                like_post_id = posts_data.post_id) as post_like_count
        FROM
            posts_data
        WHERE
            posts_data.post_id = #{postId}
    </select>

    <select id="getPostForKeyword" parameterType="com.together.springStudy.model.Keyword" resultMap="PostMainMap">
        SELECT
            posts_data.*,
            (SELECT
                user_name
            FROM
                user_data
            WHERE
            user_id = posts_data.post_user_id) as user_name,
            (SELECT
                count(*)
            FROM
                post_comment
            WHERE
                comment_post_id = posts_data.post_id) as post_comment_count,
            (SELECT
                count(*)
            FROM
                post_like
            WHERE
                like_post_id = posts_data.post_id) as post_like_count
        FROM
            posts_data
        <where>
            <if test="keyword != null">
                posts_data.post_title like concat('%', #{keyword}, '%')
                OR
                posts_data.post_content like concat('%', #{keyword}, '%');
            </if>
        </where>
    </select>

    <select id="getPostsByUserId" resultMap="PostMainMap">
        SELECT
            posts_data.*,
            (SELECT
                user_name
            FROM
                user_data
            WHERE
                user_id = posts_data.post_user_id) as user_name,
            (SELECT
                count(*)
            FROM
                post_comment
            WHERE
                comment_post_id = posts_data.post_id) as post_comment_count,
            (SELECT
                count(*)
            FROM
                post_like
            WHERE
                like_post_id = posts_data.post_id) as post_like_count
        FROM
            posts_data
        WHERE
            posts_data.post_user_id = #{userId}
    </select>

    <select id="getPostByBoardId" resultMap="PostMainMap">
        SELECT
            posts_data.*,
            (SELECT
                user_name
            FROM
                user_data
            WHERE
                user_id = posts_data.post_user_id) as user_name,
            (SELECT
                count(*)
            FROM
                post_comment
            WHERE
                comment_post_id = posts_data.post_id) as post_comment_count,
            (SELECT
                count(*)
            FROM
                post_like
            WHERE
                like_post_id = posts_data.post_id) as post_like_count
        FROM
            posts_data
        WHERE
            posts_data.post_board_id = #{postBoardId}
    </select>

    <select id="getAllCommentByPostId" resultType="com.together.springStudy.model.PostDetail">
        SELECT
            *
        FROM
            post
    </select>


    <insert id="createPost" parameterType="com.together.springStudy.model.PostsData">
        INSERT INTO
            posts_data
            (post_board_id, post_user_id, post_title, post_content, post_creation_date)
        VALUES
            (#{postBoardId}, #{postUserId}, #{postTitle}, #{postContent}, #{postCreationDate})
    </insert>

    <insert id="createComment" parameterType="com.together.springStudy.model.PostComment">
        INSERT INTO
            post_comment
            (comment_user_id, comment_post_id, comment_content)
        VALUES
            (#{commentUserId}, #{commentPostId}, #{commentContent})
    </insert>
    <insert id="createChildComment" parameterType="com.together.springStudy.model.PostComment">
        INSERT INTO
            post_comment
            (comment_user_id, comment_post_id, comment_parentnum, comment_content)
        VALUES
            (#{commentUserId}, #{commentPostId},#{commentParentnum}, #{commentContent})
    </insert>

    <insert id="createLike" parameterType="com.together.springStudy.model.PostLike">

    </insert>
</mapper>